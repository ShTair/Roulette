@page "/controller"
@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<PageTitle>設定 - ルーレット</PageTitle>

<h1>ルーレットの設定</h1>

@if (_openerIsClosed)
{
    <p>
        ルーレットのウィンドウとのリンクが切れました。<br />
        ウィンドウを閉じましたか？
    </p>
}

<button class="btn btn-warning" @onclick="Update">更新</button>

@code {
    private bool _openerIsClosed;

    [SupplyParameterFromQuery(Name = "config")]
    private string? Config { get; set; }

    private RouletteConfig? _config;

    protected override void OnInitialized()
    {
        if (Config is { })
        {
            _config = JsonSerializer.Deserialize<RouletteConfig>(Config);
        }
        else
        {
            _config = new RouletteConfig { Items = [] };
        }
    }

    private async Task Update()
    {
        _config!.Items = [.. _config.Items, new RouletteItem { Name = DateTime.Now.ToString("HH:mm:ss") }];
        Config = JsonSerializer.Serialize(_config, new JsonSerializerOptions(JsonSerializerDefaults.Web) { DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull });
        var url = NavigationManager.GetUriWithQueryParameter("config", Config);
        NavigationManager.NavigateTo(url);

        _openerIsClosed = !await JS.InvokeAsync<bool>("updateConfig", _config);
    }
}
